version: '3.8'

services:
  # FIWARE WireCloud Dashboard
  wirecloud:
    image: fiware/wirecloud:1.3.1
    container_name: fiware-wirecloud
    ports:
      - "8000:8000"
    depends_on:
      - postgres-db
      - elasticsearch
      - orion
      - keyrock
    environment:
      - WIRECLOUD_POSTGRES_HOST=postgres-db
      - WIRECLOUD_POSTGRES_PASSWORD=wirecloud
      - DJANGO_SETTINGS_MODULE=wirecloud.settings
      - WIRECLOUD_ELASTICSEARCH_URL=http://elasticsearch:9200/
      # Add NGSI proxy configuration for real data
      - NGSI_PROXY_URL=http://ngsiproxy:8100
      # Add Keyrock OAuth2 configuration
      - SOCIAL_AUTH_FIWARE_KEY=wirecloud_client
      - SOCIAL_AUTH_FIWARE_SECRET=wirecloud_secret
      - SOCIAL_AUTH_FIWARE_IDM_ENDPOINT=http://keyrock:3005
    networks:
      - fiware-network

  # NGSI Proxy for WireCloud
  ngsiproxy:
    image: fiware/ngsiproxy:1.2.0
    container_name: ngsiproxy
    ports:
      - "8100:8100"
    networks:
      - fiware-network

  # PostgreSQL for WireCloud
  postgres-db:
    image: postgres:13
    container_name: postgres-db
    environment:
      - POSTGRES_PASSWORD=wirecloud
      - POSTGRES_USER=wirecloud
      - POSTGRES_DB=wirecloud
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - fiware-network

  # Elasticsearch for WireCloud
  elasticsearch:
    image: elasticsearch:2.4
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - fiware-network

  # FIWARE Keyrock Identity Management
  keyrock:
    image: fiware/idm:8.3.0
    container_name: fiware-keyrock
    ports:
      - "3005:3005"
    environment:
      - IDM_DB_HOST=mysql-db
      - IDM_DB_PASS=keyrock
      - IDM_DB_USER=keyrock
      - IDM_HOST=http://localhost:3005
      - IDM_PORT=3005
      # Add initial admin user
      - IDM_ADMIN_USER=admin
      - IDM_ADMIN_EMAIL=admin@warehouse.com
      - IDM_ADMIN_PASS=admin
      # Add WireCloud OAuth client automatically
      - IDM_CREATE_OAUTH_CLIENT=true
      - IDM_OAUTH_CLIENT_ID=wirecloud_client
      - IDM_OAUTH_CLIENT_SECRET=wirecloud_secret
      - IDM_OAUTH_CLIENT_URL=http://localhost:8000
    depends_on:
      - mysql-db
    networks:
      - fiware-network

  # MySQL for Keyrock
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=keyrock
      - MYSQL_DATABASE=idm
      - MYSQL_USER=keyrock
      - MYSQL_PASSWORD=keyrock
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - fiware-network

  # Orion Context Broker
  orion:
    image: fiware/orion:3.8.0
    container_name: fiware-orion
    depends_on:
      - mongo-db
    ports:
      - "1026:1026"
    command: -dbhost mongo-db -logLevel DEBUG
    networks:
      - fiware-network

  # MongoDB for Orion
  mongo-db:
    image: mongo:4.4
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - fiware-network

  # IoT Device Simulator
  iot-simulator:
    build:
      context: ./simulator
      dockerfile: Dockerfile
    container_name: iot-simulator
    restart: unless-stopped
    environment:
      - ORION_URL=http://orion:1026
    depends_on:
      - orion
    networks:
      - fiware-network

  # Smart Warehouse Management Application
  warehouse-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-warehouse-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_ORION_URL=http://localhost:1026
      - NEXT_PUBLIC_WIRECLOUD_URL=http://localhost:8000
      - NEXT_PUBLIC_KEYROCK_URL=http://localhost:3005
    depends_on:
      - orion
      - wirecloud
      - keyrock
    networks:
      - fiware-network

networks:
  fiware-network:
    driver: bridge

volumes:
  mongo-data:
  postgres-data:
  elasticsearch-data:
  mysql-data:

