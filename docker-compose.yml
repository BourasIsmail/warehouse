version: '3.8'

services:
  # Smart Warehouse Management Application
  warehouse-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: smart-warehouse-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_ORION_URL=http://orion:1026
      - NEXT_PUBLIC_KEYROCK_URL=http://keyrock:3005
      - NEXT_PUBLIC_WIRECLOUD_URL=http://wirecloud:8000
      - NEXT_PUBLIC_KNOWAGE_URL=http://knowage:8080
    depends_on:
      - orion
      - keyrock
      - wirecloud
      - knowage
    networks:
      - fiware-network

  # FIWARE Orion Context Broker
  orion:
    image: fiware/orion:3.8.0
    container_name: fiware-orion
    depends_on:
      - mongo-db
    ports:
      - "1026:1026"
    command: -dbhost mongo-db -logLevel DEBUG
    networks:
      - fiware-network

  # MongoDB for Orion
  mongo-db:
    image: mongo:4.4
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - fiware-network

  # FIWARE Keyrock Identity Management
  keyrock:
    image: fiware/idm:8.3.0
    container_name: fiware-keyrock
    ports:
      - "3005:3005"
    environment:
      - IDM_DB_HOST=mysql-db
      - IDM_DB_PASS=keyrock
      - IDM_DB_USER=keyrock
      - IDM_HOST=http://localhost:3005
      - IDM_PORT=3005
    depends_on:
      - mysql-db
    networks:
      - fiware-network

  # MySQL for Keyrock
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=keyrock
      - MYSQL_DATABASE=idm
      - MYSQL_USER=keyrock
      - MYSQL_PASSWORD=keyrock
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - fiware-network

  # FIWARE WireCloud Dashboard
  wirecloud:
    image: fiware/wirecloud:1.3.1
    container_name: fiware-wirecloud
    ports:
      - "8000:8000"
    depends_on:
      - postgres-db
    environment:
      - WIRECLOUD_POSTGRES_HOST=postgres-db
      - WIRECLOUD_POSTGRES_PASSWORD=wirecloud
    networks:
      - fiware-network

  # PostgreSQL for WireCloud
  postgres-db:
    image: postgres:13
    container_name: postgres-db
    environment:
      - POSTGRES_PASSWORD=wirecloud
      - POSTGRES_USER=wirecloud
      - POSTGRES_DB=wirecloud
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - fiware-network

  # Knowage Analytics
  knowage:
    image: knowagelabs/knowage-server-docker:8.0.0
    container_name: knowage
    ports:
      - "8080:8080"
    environment:
      - KNOWAGE_DB_HOST=mariadb
      - KNOWAGE_DB_USER=knowage
      - KNOWAGE_DB_PASS=knowage
    depends_on:
      - mariadb
    networks:
      - fiware-network

  # MariaDB for Knowage
  mariadb:
    image: mariadb:10.3
    container_name: mariadb
    environment:
      - MYSQL_ROOT_PASSWORD=knowage
      - MYSQL_DATABASE=knowage
      - MYSQL_USER=knowage
      - MYSQL_PASSWORD=knowage
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - fiware-network

networks:
  fiware-network:
    driver: bridge

volumes:
  mongo-data:
  mysql-data:
  postgres-data:
  mariadb-data:

